// Generated by view binder compiler. Do not edit!
package com.example.connectue.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.connectue.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addPostImageBtn;

  @NonNull
  public final EditText postDescription;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final Button publishPostBtn;

  private ActivityAddPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addPostImageBtn, @NonNull EditText postDescription,
      @NonNull ImageView postImage, @NonNull Button publishPostBtn) {
    this.rootView = rootView;
    this.addPostImageBtn = addPostImageBtn;
    this.postDescription = postDescription;
    this.postImage = postImage;
    this.publishPostBtn = publishPostBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPostImageBtn;
      ImageView addPostImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (addPostImageBtn == null) {
        break missingId;
      }

      id = R.id.postDescription;
      EditText postDescription = ViewBindings.findChildViewById(rootView, id);
      if (postDescription == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.publishPostBtn;
      Button publishPostBtn = ViewBindings.findChildViewById(rootView, id);
      if (publishPostBtn == null) {
        break missingId;
      }

      return new ActivityAddPostBinding((ConstraintLayout) rootView, addPostImageBtn,
          postDescription, postImage, publishPostBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
